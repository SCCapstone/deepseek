# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestCreateevent():
  def setup_method(self, method):
    self.driver = webdriver.Firefox()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_createevent(self):
    self.driver.get("http://localhost:4000/")
    self.driver.set_window_size(1000, 1000)
    self.vars["random"] = self.driver.execute_script("return Math.random()")
    self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(2)").click()
    WebDriverWait(self.driver, 5).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".mb-2:nth-child(1) > .w-100")))
    self.driver.find_element(By.CSS_SELECTOR, ".mb-2:nth-child(1) > .w-100").click()
    self.driver.find_element(By.CSS_SELECTOR, ".mb-2:nth-child(1) > .w-100").send_keys(self.vars["random"]@email.com)
    self.driver.find_element(By.CSS_SELECTOR, ".mb-2:nth-child(2) > .w-100").send_keys(self.vars["random"])
    self.driver.find_element(By.CSS_SELECTOR, ".mb-2:nth-child(3) > .w-100").send_keys("testpass123")
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    WebDriverWait(self.driver, 5).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, ".mr-3 > svg")))
    self.driver.find_element(By.CSS_SELECTOR, ".btn > .mr-1").click()
    WebDriverWait(self.driver, 5).until(expected_conditions.visibility_of_element_located((By.CSS_SELECTOR, "#title > .w-100")))
    self.driver.find_element(By.CSS_SELECTOR, "#title > .w-100").click()
    self.driver.find_element(By.CSS_SELECTOR, "#title > .w-100").send_keys("Test Event Title")
    value = self.driver.find_element(By.CSS_SELECTOR, "#title > .w-100").get_attribute("value")
    assert value == "Test Event Title"
    self.driver.find_element(By.CSS_SELECTOR, "#location > .w-100").send_keys("Test Location")
    value = self.driver.find_element(By.CSS_SELECTOR, "#location > .w-100").get_attribute("value")
    assert value == "Test Location"
    self.driver.find_element(By.CSS_SELECTOR, "#description > .w-100").send_keys("Test Event Description")
    value = self.driver.find_element(By.CSS_SELECTOR, "#description > .w-100").get_attribute("value")
    assert value == "Test Event Description"
    self.driver.find_element(By.ID, "date").send_keys("2025-04-28")
    value = self.driver.find_element(By.ID, "date").get_attribute("value")
    assert value == "2025-04-28"
    self.driver.find_element(By.ID, "start-time").send_keys("12:00")
    value = self.driver.find_element(By.ID, "start-time").get_attribute("value")
    assert value == "12:00"
    self.driver.find_element(By.ID, "end-time").send_keys("14:00")
    value = self.driver.find_element(By.ID, "end-time").get_attribute("value")
    assert value == "14:00"
    self.driver.find_element(By.ID, "set-reminder").click()
    assert self.driver.find_element(By.ID, "set-reminder").is_selected() is True
    self.driver.find_element(By.ID, "public").click()
    assert self.driver.find_element(By.ID, "public").is_selected() is True
    self.driver.find_element(By.CSS_SELECTOR, ".btn-primary:nth-child(2)").click()
    WebDriverWait(self.driver, 5).until(expected_conditions.visibility_of_element_located((By.XPATH, "//div[contains(text(),\'Test Event Title\')]")))
    assert self.driver.find_element(By.XPATH, "//div[contains(text(),\'Test Event Title\')]").text == "Test Event Title"
  
